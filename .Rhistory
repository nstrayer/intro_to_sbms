rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.5, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results)
visualize_propensity_network(sweep_results, proportion_threshold = 0.7)
visualize_propensity_network(sweep_results, proportion_threshold = 0.3)
visualize_propensity_network(sweep_results, proportion_threshold = 0.4)
visualize_propensity_network(sweep_results, proportion_threshold = 0.5)
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
visualize_propensity_network(sweep_results, proportion_threshold = 0.5)
library(tidyverse)
library(sbmR)
set.seed(42)
n_blocks <- 3    # Total number of blocks
block_size <- 30 # How many nodes in each block
network <- sim_basic_block_network(
n_blocks = n_blocks,
n_nodes_per_block = block_size,
return_edge_propensities = TRUE
)
network$edge_propensities %>%
ggplot(aes(x = block_1, y = block_2)) +
geom_tile(aes(fill = propensity)) +
theme_minimal()
visualize_network(network, width = '100%')
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.1)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.4, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results, proportion_threshold = 0.5)
visualize_propensity_network(sweep_results, proportion_threshold = 0.1)
visualize_propensity_network(sweep_results, proportion_threshold = 0.05)
visualize_propensity_network(sweep_results, proportion_threshold = 0.5)
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
visualize_propensity_network(sweep_results, proportion_threshold = 0.8)
visualize_propensity_network(sweep_results, proportion_threshold = 0.75)
visualize_propensity_network(sweep_results, proportion_threshold = 0.7)
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
set.seed(42)
n_blocks <- 3    # Total number of blocks
block_size <- 33 # How many nodes in each block
network <- sim_basic_block_network(
n_blocks = n_blocks,
n_nodes_per_block = block_size,
return_edge_propensities = TRUE
)
network$edge_propensities %>%
ggplot(aes(x = block_1, y = block_2)) +
geom_tile(aes(fill = propensity)) +
theme_minimal()
visualize_network(network, width = '100%')
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.4, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
library(tidyverse)
library(sbmR)
set.seed(42)
n_blocks <- 3    # Total number of blocks
block_size <- 33 # How many nodes in each block
network <- sim_basic_block_network(
n_blocks = n_blocks,
n_nodes_per_block = block_size,
return_edge_propensities = TRUE
)
network$edge_propensities %>%
ggplot(aes(x = block_1, y = block_2)) +
geom_tile(aes(fill = propensity)) +
theme_minimal()
visualize_network(network, width = '100%')
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.4, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
set.seed(42)
n_blocks <- 3    # Total number of blocks
block_size <- 40 # How many nodes in each block
network <- sim_basic_block_network(
n_blocks = n_blocks,
n_nodes_per_block = block_size,
return_edge_propensities = TRUE
)
network$edge_propensities %>%
ggplot(aes(x = block_1, y = block_2)) +
geom_tile(aes(fill = propensity)) +
theme_minimal()
visualize_network(network, width = '100%')
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.4, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.3, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
library(tidyverse)
library(sbmR)
set.seed(42)
n_blocks <- 3    # Total number of blocks
block_size <- 40 # How many nodes in each block
network <- sim_basic_block_network(
n_blocks = n_blocks,
n_nodes_per_block = block_size,
return_edge_propensities = TRUE
)
network$edge_propensities %>%
ggplot(aes(x = block_1, y = block_2)) +
geom_tile(aes(fill = propensity)) +
theme_minimal()
visualize_network(network, width = '100%')
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
num_sweeps <- 150
sweep_results <- mcmc_sweep(my_sbm, num_sweeps = num_sweeps, eps = 0.3, track_pairs = TRUE)
sweep_df <- sweep_results$sweep_info %>%
mutate(sweep = 1:n(),
label = 'eps = 0.1') %>%
pivot_longer(entropy_delta:num_nodes_moved)
sweep_df %>%
ggplot(aes(x = sweep, y = value)) +
geom_line() +
facet_grid(name~., scales = "free_y") +
labs(
title = glue::glue('Result of {num_sweeps} MCMC sweeps'),
subtitle = "Entropy Delta of sweep and number of nodes moved for sweep"
)
sweep_results$pairing_counts %>%
ggplot(aes(x = node_a, y = node_b, fill = proportion_connected)) +
geom_raster() +
theme(
axis.text = element_blank(),
axis.ticks = element_blank()
) +
labs(x = "node a",
y = "node b",
fill = "Proportion of sweeps\nin same block",
title = "Node block consensus matrix",
subtitle = glue::glue("True number of blocks: {n_blocks}"))
visualize_propensity_network(sweep_results, proportion_threshold = 0.6)
xaringan:::inf_mr()
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
library(tidyverse)
library(sbmR)
set.seed(42)
n_blocks <- 3    # Total number of blocks
block_size <- 40 # How many nodes in each block
network <- sim_basic_block_network(
n_blocks = n_blocks,
n_nodes_per_block = block_size,
return_edge_propensities = TRUE
)
network$edge_propensities %>%
ggplot(aes(x = block_1, y = block_2)) +
geom_tile(aes(fill = propensity)) +
theme_minimal()
visualize_network(network, width = '100%')
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = n_blocks, color = 'orangered') +
xlim(0,20)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = "dev_from_rolling_mean", verbose = TRUE)
merged_state <- my_sbm %>%
get_state() %>%
select(id, parent)
nodes_w_inferred_block <- network$nodes  %>%
left_join(merged_state, by = 'id') %>%
rename(inferred = parent)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block)
table(nodes_w_inferred_block$inferred,nodes_w_inferred_block$block) %>% knitr::kable()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
?sim_basic_block_network
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
rbeta(1, 1, 5)
n <- 5
floor(n*0.75)
rbeta(floor(n*0.75), 1, 5)
c(rbeta(floor(n*0.75), 1, 5), rbeta(ceiling(n - (n*0.75)), 5, 1))
c(rbeta(floor(n*0.75), 1, 5), rbeta(ceiling(n - (n*0.75)), 5, 1))
n <- 6
c(rbeta(floor(n*0.75), 1, 5), rbeta(ceiling(n - (n*0.75)), 5, 1))
knitr::opts_chunk$set(
fig.dim=c(4.8, 4.5),
fig.retina=2,
out.width="100%"
# cache = TRUE
)
set.seed(42)
library(sbmR)
# Number of blocks
k <- 3
# How many nodes in each block
n_k <- 40
network <-
sim_basic_block_network(
n_blocks = k,
propensity_drawer = function(n){c(rbeta(floor(n*0.75), 1, 5), rbeta(ceiling(n - (n*0.75)), 5, 1))}
n_nodes_per_block = n_k
network <-
sim_basic_block_network(
n_blocks = k,
propensity_drawer = function(n){c(rbeta(floor(n*0.75), 1, 5), rbeta(ceiling(n - (n*0.75)), 5, 1))},
n_nodes_per_block = n_k
)
visualize_network(network)
network <-
sim_basic_block_network(
n_blocks = k,
propensity_drawer = function(n){c(rbeta(floor(n*0.75), 1, 5), rbeta(ceiling(n - (n*0.75)), 5, 1))},
n_nodes_per_block = n_k
)
visualize_network(network)
network <-
sim_basic_block_network(
n_blocks = k,
propensity_drawer = function(n){c(rbeta(floor(n*0.85), 1, 5), rbeta(ceiling(n - (n*0.95)), 5, 1))},
n_nodes_per_block = n_k
)
visualize_network(network)
my_sbm <- create_sbm(network)
collapse_results <- my_sbm %>%
collapse_blocks(report_all_steps = TRUE, sigma = 1.01)
n_blocks
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = 3, color = 'orangered') +
xlim(0,20)
library(tidyverse)
visualize_collapse_results(collapse_results, heuristic = 'dev_from_rolling_mean') +
geom_vline(xintercept = 3, color = 'orangered') +
xlim(0,20)
network <-
sim_basic_block_network(
n_blocks = k,
propensity_drawer = function(n){c(rbeta(floor(n*0.95), 1, 5), rbeta(ceiling(n - (n*0.95)), 5, 1))},
n_nodes_per_block = n_k
)
visualize_network(network)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
knitr::opts_chunk$set(
fig.dim=c(4.8, 4.5),
fig.retina=2,
out.width="100%",
message=FALSE,
warning=FALSE
# cache = TRUE
)
library(knitr)
set.seed(42)
my_sbm <- choose_best_collapse_state(my_sbm, collapse_results, heuristic = 'delta_ratio')
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
